// Generated by CoffeeScript 1.3.3
var http, q, server, server_port, url;

http = require("http");

q = require("querystring");

url = require("url");

server_port = process.env.PORT || 9006;

server = http.createServer().listen(server_port);

server.on("request", function(req, res) {
  var callbackFn, client, options, params, post_data, requestUrl;
  params = url.parse(req.url, true).query;
  callbackFn = "callback";
  console.log(params);
  if (params.callback !== void 0 && params.callback !== "") {
    callbackFn = params.callback;
  }
  if (params.url === void 0 || params.url === "") {
    res.write("" + callbackFn + " (" + (JSON.stringify({
      status: "ERROR",
      message: "missing url parameter"
    })) + ")");
    res.end();
    return;
  }
  requestUrl = url.parse(params.url);
  post_data = JSON.stringify(params);
  options = {
    host: requestUrl.hostname,
    path: requestUrl.path,
    method: "POST",
    headers: {
      "Content-Length": post_data.length,
      "Content-Type": "application/json"
    }
  };
  client = http.request(options);
  client.on("response", function(response) {
    var data,
      _this = this;
    data = "";
    response.setEncoding('utf8');
    response.on("data", function(chunk) {
      return data += chunk;
    });
    return response.on("end", function() {
      return _this.emit("end", data);
    });
  });
  client.write(post_data);
  client.end();
  return client.on("end", function(data) {
    console.log("parent end");
    console.log("" + callbackFn + " (" + data + ")");
    res.write("" + callbackFn + " (" + data + ")");
    return res.end();
  });
});

console.log("post proxy running on " + server_port);
